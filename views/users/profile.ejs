<%- include('../layout/userhead.ejs') %>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.9/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.9/dist/sweetalert2.all.min.js"></script>


    <style>
        body {
          background-color: #afb3a6;
            margin-top: 20px;
        }

        .ui-w-80 {
            width: 80px !important;
            height: auto;
        }

        .btn-default {
            border-color: rgba(24, 28, 33, 0.1);
            background: rgba(0, 0, 0, 0);
            color: #4E5155;
        }

        label.btn {
            margin-bottom: 0;
        }

        .btn-outline-primary {
            border-color: #26B4FF;
            background: transparent;
            color: #26B4FF;
        }

        .btn {
            cursor: pointer;
        }

        .text-light {
            color: #babbbc !important;
        }

        .btn-facebook {
            border-color: rgba(0, 0, 0, 0);
            background: #3B5998;
            color: #fff;
        }

        .btn-instagram {
            border-color: rgba(0, 0, 0, 0);
            background: #000;
            color: #fff;
        }

        .card {
            background-clip: padding-box;
            box-shadow: 0 1px 4px rgba(24, 28, 33, 0.012);
        }

        .row-bordered {
            overflow: hidden;
        }

        .account-settings-fileinput {
            position: absolute;
            visibility: hidden;
            width: 1px;
            height: 1px;
            opacity: 0;
        }

        .account-settings-links .list-group-item.active {
            font-weight: bold !important;
        }

        html:not(.dark-style) .account-settings-links .list-group-item.active {
            background: transparent !important;
        }

        .account-settings-multiselect~.select2-container {
            width: 100% !important;
        }

        .light-style .account-settings-links .list-group-item {
            padding: 0.85rem 1.5rem;
            border-color: rgba(24, 28, 33, 0.03) !important;
        }

        .light-style .account-settings-links .list-group-item.active {
            color: #4e5155 !important;
        }

        .material-style .account-settings-links .list-group-item {
            padding: 0.85rem 1.5rem;
            border-color: rgba(24, 28, 33, 0.03) !important;
        }

        .material-style .account-settings-links .list-group-item.active {
            color: #4e5155 !important;
        }

        .dark-style .account-settings-links .list-group-item {
            padding: 0.85rem 1.5rem;
            border-color: rgba(255, 255, 255, 0.03) !important;
        }

        .dark-style .account-settings-links .list-group-item.active {
            color: #fff !important;
        }

        .light-style .account-settings-links .list-group-item.active {
            color: #4E5155 !important;
        }

        .light-style .account-settings-links .list-group-item {
            padding: 0.85rem 1.5rem;
            border-color: rgba(24, 28, 33, 0.03) !important;
        }

        .profilePhoto {
            margin-left: 700px;
            margin-top: 35px;
        }
    </style>
    <div class="profilePhoto">
        <img src="/public/photos/profileee.jpg" alt="" width="120px;height:180px;">


    </div>

    <div class="container light-style flex-grow-1 container-p-y">
        <h4 class="font-weight-bold py-3 mb-4">

        </h4>
        <div class="card overflow-hidden">
            <div class="row no-gutters row-bordered row-border-light">
                <div class="col-md-3 pt-0">
                    <div class="list-group list-group-flush account-settings-links">
                        <a class="list-group-item list-group-item-action active" data-toggle="list"
                            href="#account-general">My Account</a>
                        <a class="list-group-item list-group-item-action" data-toggle="list"
                            href="#account-change-password">Change password</a>
                        <a class="list-group-item list-group-item-action" data-toggle="list"
                            href="#account-Address">Address</a>

                        <a class="list-group-item list-group-item-action" data-toggle="list" href="#account-order">Order
                            Status</a>
                    </div>
                </div>


                <div class="col-md-9">
                    <div class="tab-content">
                        <div class="tab-pane fade active show" id="account-general">
                            <hr class="border-light m-0">
                            <div class="card-body">
                                <form action="" method="post">

                                    <div class="form-group row">
                                        <label class="col-sm-2 col-form-label">Fullname</label>
                                        <div class="col-sm-10">
                                            <p class="form-control">
                                                <%= user.name %>
                                            </p>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-sm-2 col-form-label">Referral Code</label>
                                        <div class="col-sm-10">
                                            <% if (user.referalCode) { %>
                                                <p class="form-control">
                                                    <%= user.referalCode %>
                                                </p>
                                                <% } else { %>
                                                    <p class="form-control">No referral code available</p>
                                                    <% } %>
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <label class="col-sm-2 col-form-label">Mobile N0</label>
                                        <div class="col-sm-10">
                                            <p class="form-control">
                                                <%= user.mobile %>
                                            </p>
                                        </div>
                                    </div>



                                    <div class="form-group row">
                                        <label class="col-sm-2 col-form-label">Address</label>
                                        <div class="col-sm-10">
                                            <% if (user.addresses && user.addresses.length> 0) { %>
                                                <input type="text" name="addresses" id="addressInput"
                                                    class="form-control" value="<%= user.addresses[0].address %>">
                                                <% } else { %>
                                                    <input type="text" name="addresses" id="addressInput"
                                                        class="form-control" value="NILL">
                                                    <% } %>
                                        </div>
                                    </div>



                                    <div class="form-group row">
                                        <label class="col-sm-2 col-form-label">E-mail</label>
                                        <div class="col-sm-10">
                                            <p class="form-control">
                                                <%= user.email %>
                                            </p>
                                        </div>
                                    </div>
                            </div>
                            <div class="text-right mt-3 pt-2 pb-5 pr-3">
                                <a href="/edit-user?id=<%= user._id %>" class="btn btn-primary"
                                    id="editProfileBtn">Edit</a>
                            </div>
                            </form>
                        </div>

                        <div class="tab-pane fade" id="account-change-password">
                            <div class="card-body pb-2">
                                <form id="password-change-form" action="" method="post">
                                    <div class="form-group">
                                        <label class="form-label">Current password</label>

                                        <input type="password" class="form-control" id="currentPassword">

                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">New password</label>
                                        <input type="password" class="form-control" id="newPassword">
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">Repeat new password</label>
                                        <input type="password" class="form-control" id="repeatPassword">
                                    </div>
                                    <div class="text-right mt-3 pt-2 pb-5 pr-3">
                                        <button type="button" class="btn btn-primary"
                                            onclick="submitForm()">SUBMIT</button>
                                    </div>
                                </form>
                            </div>
                        </div>




                        <div class="tab-pane fade" id="account-Address">
                            <div class="card-body pb-2">
                                <div class="form-group row">
                                    <label class="col-sm-2 col-form-label">Addresses</label>
                                    <div class="col-sm-10">
                                        <div class="row">
                                            <% user.addresses.forEach(address=> { %>
                                                <div class="col-sm-4 mb-3">
                                                    <div class="card position-relative">
                                                        <div class="card-body">
                                                            <!-- Address details -->
                                                            <div>
                                                                <div class="card-text">
                                                                    <%= address.address %>
                                                                        <%= address.city %>
                                                                            <%= address.state %>
                                                                                <%= address.pincode %>
                                                                                    <%= address.country %>

                                                                </div>
                                                            </div>
                                                            <div class="mt-3">
                                                                <div class="position-absolute bottom-0 end-0 mb-2 me-2">
                                                                    <a
                                                                        href="/editAddress?id=<%= user._id%>&addressId=<%= address._id %>">
                                                                        <button type="button" class="btn btn-sm">
                                                                            <img src="/public/photos/new edit.jpg"
                                                                                style="height: 20px; width: 20px;">
                                                                        </button>
                                                                    </a>
                                                                    <a href="#"
                                                                        onclick="deleteAddress('<%= user._id %>', '<%= address._id %>')">
                                                                        <button type="button" class="btn btn-sm">
                                                                            <img src="/public/photos/delete.jpg"
                                                                                style="height: 20px; width: 20px;">
                                                                        </button>
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <% }); %>
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group row">

                                    <div class="col-sm-10">
                                        <button type="button" class="btn btn-primary" data-toggle="modal"
                                            data-target="#addAddressModal">Add Address</button>
                                    </div>

                                </div>
                                <div class="modal" id="addAddressModal" tabindex="-1" role="dialog"
                                    aria-labelledby="addAddressModalLabel" aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="addAddressModalLabel">Add New Address
                                                </h5>
                                                <button type="button" class="close" data-dismiss="modal"
                                                    aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">

                                                <form id="addAddressForm" method="post" action=/addAddress>
                                                    <input type="hidden" id="user_id" name="user_id"
                                                        value="<%= user._id %>"> <!-- Add this line -->
                                                    <div class="form-group row">
                                                        <label for="newAddress">New Address:</label>
                                                        <input type="text" id="newAddress" name="newAddress"
                                                            class="form-control" required>

                                                        <label for="city">City:</label>
                                                        <input type="text" id="city" name="city" class="form-control"
                                                            required>

                                                        <label for="state">State:</label>
                                                        <input type="text" id="state" name="state" class="form-control"
                                                            required>

                                                        <label for="pincode">PinCode:</label>
                                                        <input type="text" id="pincode" name="pincode"
                                                            class="form-control" required>

                                                        <label for="country">Country:</label>
                                                        <input type="text" id="country" name="country"
                                                            class="form-control" required>

                                                        <!-- Display area for validation errors -->
                                                        <div id="validationErrors" style="color: red;"></div>

                                                        <br><br>

                                                        <button type="button" class="btn btn-primary"
                                                            onclick="validateAndSubmit()">Add Address</button>
                                                    </div>
                                                </form>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="tab-pane fade" id="account-order">
                            <section class="h-100 gradient-custom">
                                <div class="container py-5 h-100" style="width:1000px">
                                    <div class="row justify-content-center align-items-center">
                                        <div class="col-lg-8">
                                            <% if (orderDetails) { %>
                                                <% orderDetails.forEach((order, index)=> { %>
                                                    <div class="order-details-card mb-4">
                                                        <div class="order-details-header bg-light p-3">
                                                            <p class="fw-bold mb-0">Order Details - <%= index + 1 %>
                                                            </p>
                                                            <p> ID:<%= order._id %>
                                                            </p>
                                                            <p class="mb-0 total-price">Total: Rs.<%= order.totalPrice
                                                                    !==undefined ? order.totalPrice.toFixed(2) : 'N/A'
                                                                    %>
                                                            </p>
                                                        </div>

                                                        <% order.products.forEach((product, productIndex)=> { %>
                                                            <div class="card shadow-sm border mb-2">
                                                                <div class="card-body p-3 d-flex align-items-center">
                                                                    <div class="product-image me-3"
                                                                        style="width:100px;">
                                                                        <img src="/public/productImage/<%= product.product_id && product.product_id.image && product.product_id.image[0] %>"
                                                                            alt="<%= product.product_id && product.product_id.name %>"
                                                                            class="img-fluid">
                                                                    </div>
                                                                    <div class="product-details flex-grow-1">
                                                                        <p class="product-name mb-0">
                                                                            <%= product.product_id &&
                                                                                product.product_id.name %>
                                                                        </p>
                                                                        <p class="product-quantity mb-0">Qty: <%=
                                                                                product.quantity %>
                                                                        </p>
                                                                    </div>


                                                                    <div class="product-price me-3">
                                                                        <p>Rs.<%= product.price !==undefined ?
                                                                                product.price.toFixed(2) : 'N/A' %>
                                                                        </p>
                                                                    </div>





                                                                    &nbsp;
                                                                    <div class="order-status me-3">
                                                                        <p style="font-size:18px"><b>
                                                                                <%= order.status %>
                                                                            </b></p>

                                                                    </div>
                                                                   
                                                                  

                                                                </div>
                                                            </div>
                                                            <% }); %>
                                                                <div class="order-actions bg-light p-3">
                                                                    <div
                                                                        class="d-flex justify-content-between align-items-center">
                                                                        <div class="download-invoice">
                                                                            <% if (order.status !=='Cancelled' ) { %>
                                                                                <button class="btn btn-primary"
                                                                                    onclick="downloadInvoice('<%= order._id %>')">Download
                                                                                    Invoice</button>
                                                                                <% } %>
                                                                        </div>
                                                                        <div class="cancel-order">
                                                                            <% if (order.status !=='Delivered' &&
                                                                                order.status !=='Cancelled' ) { %>
                                                                                <button
                                                                                    id="cancelButton_<%= order._id %>"
                                                                                    class="btn btn-danger"
                                                                                    onclick="cancelOrder('<%= order._id %>')">Cancel</button>
                                                                                <% } else if (order.status==='Cancelled'
                                                                                    ) { %>
                                                                                    <p>Order Cancelled</p>
                                                                                    <% } else { %>
                                                                                        <p>Order Delivered</p>
                                                                                        <% } %>
                                                                        </div>
                                                                        <div class="return-order">
                                                                            <% if (order.status==='Delivered' ) { %>
                                                                                <div class="buttons">
                                                                                    <a href="/return-order/<%= order._id %>"
                                                                                        class="btn btn-primary">Return</a>
                                                                                </div>
                                                                                <% } %>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                    </div>
                                                    <% }); %>
                                                        <% } else { %>
                                                            <p>No order details found.</p>
                                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </section>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>


        function validateAndSubmit() {
            // Clear previous validation errors
            document.getElementById('validationErrors').innerHTML = '';

            // Get form input values
            const newAddress = document.getElementById('newAddress').value.trim();
            const city = document.getElementById('city').value.trim();
            const state = document.getElementById('state').value.trim();
            const pincode = document.getElementById('pincode').value.trim();
            const country = document.getElementById('country').value.trim();

            // Validate each field
            if (newAddress === '' || city === '' || state === '' || pincode === '' || country === '') {
                document.getElementById('validationErrors').innerHTML = 'All fields are required.';
                return;
            }

            if (!(/^\d+$/.test(pincode))) {
                document.getElementById('validationErrors').innerHTML = 'Pincode should be number.';
                return;
            }
            document.getElementById('addAddressForm').submit();
        }


        async function downloadInvoice(orderId) {
            try {
                const response = await fetch(`/invoice?id=${orderId}`);
                if (!response.ok) {
                    throw new Error(`Failed to download invoice: ${response.status} - ${response.statusText}`);
                }

                const blob = await response.blob();
                const url = window.URL.createObjectURL(new Blob([blob]));
                const a = document.createElement('a');
                a.href = url;
                a.download = `invoice_${orderId}.pdf`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
            } catch (error) {
                console.error('Error downloading invoice:', error);
            }
        }


        function cancelOrder(orderId) {
            // You can use AJAX or fetch to send a request to your server to cancel the order
            fetch(`/cancel-order/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
                .then(response => {
                    console.log('Server Response:', response);
                    return response.json();
                })
                .then(data => {
                    // Use SweetAlert for custom alerts
                    Swal.fire({
                        title: 'Order Cancelled!',
                        text: data.message,
                        icon: 'success',
                        confirmButtonText: 'OK',
                    });

                    // Disable the cancel button and update order status in the UI
                    const cancelButton = document.getElementById(`cancelButton_${orderId}`);
                    if (cancelButton) {
                        cancelButton.setAttribute('disabled', 'true');
                        cancelButton.innerHTML = 'Cancelled';
                    }
                    console.log("Cancel button clicked for order:", orderId);
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Use SweetAlert for custom error alerts
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred while cancelling the order.',
                        icon: 'error',
                        confirmButtonText: 'OK',
                    });
                });
        }

        /*async function updateOrderStatus(orderId) {
        try {
            const newStatus = document.getElementById(`newStatus${orderId}`).value;

            // Make a PUT request to update the order status
            const response = await fetch(`/admin/orders/${orderId}/status`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ newStatus }),
            });

            // Handle the response from the server
            if (response.ok) {
                const result = await response.json();

                // Update the status in the DOM
                const statusElement = document.querySelector(`#status${orderId}`);
                statusElement.textContent = result.newStatus;

                // Show a notification or perform any other actions
                console.log(`Order ${orderId} status updated successfully`);

                // If the status is "Returned," trigger the return process
                if (result.newStatus === 'Returned') {
                    initiateReturn(orderId);
                }
            } else {
                const result = await response.json();
                console.error(result.error || result.message);
                // Handle error, show error message, etc.
            }
        } catch (error) {
            console.error(error.message);
            // Handle unexpected errors
        }
    }*/

        function initiateReturn(orderId) {
            // You can use AJAX or fetch to send a request to your server to initiate the return
            fetch(`/return-order/${orderId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
                .then(response => response.json())
                .then(data => {
                    // Handle the response, if needed
                    console.log('Return initiation successful:', data);

                    // Example: Redirect to a return page or show a success message
                    window.location.href = `/return-success/${orderId}`;
                })
                .catch(error => {
                    console.error('Error initiating return:', error);

                    // Handle error, show error message, etc.
                });
        }



        function deleteAddress(userId, addressId) {
            if (confirm('Are you sure you want to delete this address?')) {
                // Redirect to deleteAddress route with userId and addressId
                window.location.href = `/deleteAddress?userId=${userId}&addressId=${addressId}`;
            }
        }


        function addAddress() {
            const newAddress = document.getElementById('newAddress').value;
            const city = document.getElementById('city').value;
            const state = document.getElementById('state').value;
            const pincode = document.getElementById('pincode').value;
            const country = document.getElementById('country').value;


            fetch('/addAddress', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    user_id: '<%= user._id %>',
                    name: '<%= user.name %>',  // Assuming you want to send user details for the address
                    email: '<%= user.email %>', // You can adjust this based on your needs
                    newAddress: newAddress,
                    city: city,
                    state: state,
                    pincode: pincode,
                    country: country,

                }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        // Handle error
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message,
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
        function submitForm() {
            const currentPassword = document.getElementById('currentPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const repeatPassword = document.getElementById('repeatPassword').value;

            // Validate form data (you may add more validation as needed)
            if (newPassword !== repeatPassword) {
                Swal.fire({
                    icon: 'error',
                    title: 'Passwords do not match',
                });
                return;
            }

            // Send the data to the server using AJAX
            fetch('/change-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    user_id: '<%= user._id %>',
                    currentPassword: currentPassword,
                    newPassword: newPassword,
                }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Password change request received, show a success message to the user
                        Swal.fire({
                            icon: 'success',
                            title: 'Password changed successfully!',
                        });
                    } else {
                        // Password change failed, show an error message
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message,
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Handle other errors
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred. Please try again.',
                    });
                });
        }



        $(document).ready(function () {
            // Add an event listener for the Edit button
            $('#editProfileBtn').click(function () {
                // Enable input fields for editing
                $('input').prop('disabled', false);

                // Change button text and behavior
                $(this).text('Save Changes').unbind('click').click(function () {
                    // Handle the save changes logic
                    saveChanges();
                });
            });

            function saveChanges() {
                // Extract updated values from input fields
                var updatedName = $('#categoryName').val();
                var updatedMobile = $('#mobile').val();
                var updatedEmail = $('#email').val();

                // Send an AJAX request to update user details on the server
                $.ajax({
                    type: 'PATCH', // Use 'PATCH' for partial updates
                    url: `/edit-user?id=<%= user._id %>`, // Replace with your server endpoint
                    data: {
                        name: updatedName,
                        mobile: updatedMobile,
                        email: updatedEmail
                    },
                    success: function (response) {
                        // Handle success (e.g., show a success message)
                        Swal.fire({
                            icon: 'success',
                            title: 'Changes saved successfully!',
                        });
                        console.log('Changes saved successfully');
                    },
                    error: function (error) {
                        // Handle error (e.g., show an error message)
                        Swal.fire({
                            icon: 'error',
                            title: 'Error saving changes',
                            text: 'An error occurred while saving changes.',
                        });
                        console.error('Error saving changes', error);
                    },
                });

                // Optionally, disable input fields and revert button text
                $('input').prop('disabled', true);
                $('#editProfileBtn').text('Edit Profile').unbind('click').click(function () {
                    // Reattach the original click event when reverting to edit mode
                });
            }
        });
    </script>




    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript">

    </script>


    <%- include('../layout/userFoot.ejs') %>